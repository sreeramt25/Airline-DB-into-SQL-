<!-- ü™ë Find the seat number which is least allocated among all the seats -->
<h3 style="color: #3498db;">ü™ë Find the seat number which is least allocated among all the seats</h3>
<pre>
WITH t1 AS (
    SELECT seat_no, COUNT(seat_no) AS count_seat, 
           DENSE_RANK() OVER (ORDER BY COUNT(seat_no)) AS RA
    FROM BOARDING_PASSES
    GROUP BY seat_no
)
SELECT seat_no
FROM t1
WHERE RA = 1;
</pre>

<!-- üí∏ Month wise highest paying passenger name and passenger id -->
<h3 style="color: #e74c3c;">üí∏ Month wise highest paying passenger name and passenger id</h3>
<pre>
WITH table1 AS (
    SELECT TO_CHAR(book_date, 'mmm-yy') AS Month_name, 
           passenger_id, passenger_name, total_amount,
           RANK() OVER (PARTITION BY TO_CHAR(book_date, 'mmm-yy') 
                        ORDER BY total_amount DESC) AS highest_paying
    FROM BOOKINGS B
    JOIN TICKETS T ON B.book_ref = T.book_ref
)
SELECT Month_name, passenger_id, passenger_name, total_amount
FROM table1
WHERE highest_paying = 1
ORDER BY Month_name;
</pre>

<!-- üí∞ Month wise least paying passenger name and passenger id -->
<h3 style="color: #f39c12;">üí∞ Month wise least paying passenger name and passenger id</h3>
<pre>
WITH table1 AS (
    SELECT TO_CHAR(book_date, 'mmm-yy') AS Month_name, 
           passenger_id, passenger_name, total_amount,
           RANK() OVER (PARTITION BY TO_CHAR(book_date, 'mmm-yy') 
                        ORDER BY total_amount ASC) AS lowest_paying
    FROM BOOKINGS B
    JOIN TICKETS T ON B.book_ref = T.book_ref
)
SELECT Month_name, passenger_id, passenger_name, total_amount
FROM table1
WHERE lowest_paying = 1
ORDER BY Month_name;
</pre>

<!-- üõ´ Travel details of non-stop journeys or return journeys (having more than 1 flight) -->
<h3 style="color: #2ecc71;">üõ´ Travel details of non-stop journeys or return journeys (having more than 1 flight)</h3>
<pre>
SELECT passenger_id, passenger_name, T.ticket_no, COUNT(flight_id) AS return_flight
FROM TICKETS T
JOIN TICKET_FLIGHTS TF ON T.ticket_no = TF.ticket_no
GROUP BY passenger_id, passenger_name, T.ticket_no
HAVING COUNT(flight_id) > 1;
</pre>

<!-- üéüÔ∏è Count of tickets without boarding passes -->
<h3 style="color: #9b59b6;">üéüÔ∏è Count of tickets without boarding passes</h3>
<pre>
SELECT COUNT(T.ticket_no)
FROM TICKETS T
LEFT JOIN BOARDING_PASSES BP ON T.ticket_no = BP.ticket_no
WHERE BP.boarding_no IS NULL;
</pre>

<!-- ‚úàÔ∏è Details of the longest flight -->
<h3 style="color: #e67e22;">‚úàÔ∏è Details of the longest flight</h3>
<pre>
WITH table1 AS (
    SELECT flight_no, departure_airport, arrival_airport, aircraft_code,
           EXTRACT(EPOCH FROM (scheduled_arrival - scheduled_departure)) / 60 AS duration_in_min
    FROM flights
)
SELECT DISTINCT *
FROM table1
WHERE duration_in_min = (
    SELECT MAX(duration_in_min)
    FROM table1
);
</pre>

<!-- üåÖ Details of all the morning flights (6AM to 11AM) -->
<h3 style="color: #1abc9c;">üåÖ Details of all the morning flights (6AM to 11AM)</h3>
<pre>
SELECT flight_id, flight_no, departure_airport, scheduled_departure, scheduled_arrival,
       CASE WHEN EXTRACT(HOUR FROM scheduled_departure) >= 6 
            AND EXTRACT(HOUR FROM scheduled_departure) < 12 THEN 'Morning' 
       END AS timings
FROM flights
WHERE EXTRACT(HOUR FROM scheduled_departure) >= 6 
  AND EXTRACT(HOUR FROM scheduled_departure) < 11;
</pre>

<!-- üïë The earliest morning flight available from every airport -->
<h3 style="color: #f39c12;">üïë The earliest morning flight available from every airport</h3>
<pre>
WITH RankedFlights AS (
    SELECT flight_id, flight_no, scheduled_departure, scheduled_arrival, departure_airport,
           CASE WHEN EXTRACT(HOUR FROM scheduled_departure) >= 2 
                AND EXTRACT(HOUR FROM scheduled_departure) < 6 THEN 'Morning' 
           END AS Timings,
           DENSE_RANK() OVER (PARTITION BY departure_airport 
                               ORDER BY scheduled_departure) AS flight_rank
    FROM flights
    WHERE EXTRACT(HOUR FROM scheduled_departure) >= 2 
      AND EXTRACT(HOUR FROM scheduled_departure) < 6
)
SELECT flight_id, flight_no, scheduled_departure, scheduled_arrival, departure_airport, Timings
FROM RankedFlights
WHERE flight_rank = 1;
</pre>

<!-- üåç List of airport codes in Europe/Moscow timezone -->
<h3 style="color: #3498db;">üåç List of airport codes in Europe/Moscow timezone</h3>
<pre>
SELECT DISTINCT airport_code
FROM AIRPORTS
WHERE timezone = 'Europe/Moscow';
</pre>

<!-- üöÄ Count of seats in various fare conditions for every aircraft code -->
<h3 style="color: #e74c3c;">üöÄ Count of seats in various fare conditions for every aircraft code</h3>
<pre>
SELECT DISTINCT aircraft_code, fare_conditions, COUNT(seat_no) AS seat_count
FROM SEATS
GROUP BY aircraft_code, fare_conditions;
</pre>

<!-- üè∑Ô∏è Count of aircraft codes with at least one Business class seat -->
<h3 style="color: #f39c12;">üè∑Ô∏è Count of aircraft codes with at least one Business class seat</h3>
<pre>
SELECT COUNT(DISTINCT aircraft_code)
FROM SEATS
WHERE fare_conditions = 'Business';
</pre>

<!-- ‚úàÔ∏è Airport with the maximum number of departure flights -->
<h3 style="color: #2ecc71;">‚úàÔ∏è Airport with the maximum number of departure flights</h3>
<pre>
WITH table_1 AS (
    SELECT airport_name, COUNT(flight_no) AS flight_count,
           RANK() OVER (ORDER BY COUNT(flight_no) DESC) AS departure_rank
    FROM AIRPORTS A
    JOIN FLIGHTS F ON A.airport_code = F.departure_airport
    GROUP BY airport_name
)
SELECT airport_name
FROM table_1
WHERE departure_rank = 1;
</pre>

<!-- üèôÔ∏è Airport with the least number of scheduled departure flights -->
<h3 style="color: #9b59b6;">üèôÔ∏è Airport with the least number of scheduled departure flights</h3>
<pre>
WITH table_1 AS (
    SELECT airport_name, COUNT(flight_no) AS flight_count,
           RANK() OVER (ORDER BY COUNT(flight_no) ASC) AS departure_rank
    FROM AIRPORTS A
    JOIN FLIGHTS F ON A.airport_code = F.departure_airport
    GROUP BY airport_name
)
SELECT airport_name
FROM table_1
WHERE departure_rank = 1;
</pre>
